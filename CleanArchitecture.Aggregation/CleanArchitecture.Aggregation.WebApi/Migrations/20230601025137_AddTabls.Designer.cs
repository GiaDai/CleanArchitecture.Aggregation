// <auto-generated />
using System;
using CleanArchitecture.Aggregation.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CleanArchitecture.Aggregation.WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230601025137_AddTabls")]
    partial class AddTabls
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("CleanArchitecture.Aggregation.Domain.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Instructor")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("SuperheroId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("SuperheroId1")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SuperheroId1");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CleanArchitecture.Aggregation.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CleanArchitecture.Aggregation.Domain.Entities.Superhero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Height")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Superheros");
                });

            modelBuilder.Entity("CleanArchitecture.Aggregation.Domain.Entities.Superpower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("SuperPower")
                        .HasColumnType("longtext");

                    b.Property<Guid>("SuperheroId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("SuperheroId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuperheroId1");

                    b.ToTable("Superpowers");
                });

            modelBuilder.Entity("CleanArchitecture.Aggregation.Domain.Entities.Movie", b =>
                {
                    b.HasOne("CleanArchitecture.Aggregation.Domain.Entities.Superhero", "Superhero")
                        .WithMany()
                        .HasForeignKey("SuperheroId1");

                    b.Navigation("Superhero");
                });

            modelBuilder.Entity("CleanArchitecture.Aggregation.Domain.Entities.Superpower", b =>
                {
                    b.HasOne("CleanArchitecture.Aggregation.Domain.Entities.Superhero", "Superhero")
                        .WithMany()
                        .HasForeignKey("SuperheroId1");

                    b.Navigation("Superhero");
                });
#pragma warning restore 612, 618
        }
    }
}
